# -*- coding: utf-8 -*-
"""
Django settings for indextrade project.

Generated by 'django-admin startproject' using Django 1.11.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

from __future__ import unicode_literals

import os

from django.utils.translation import ugettext_lazy as _
from django.core.urlresolvers import reverse_lazy

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 's17l4dcacv4w=_$q5-5gd0f)ukn+a-sn34rd2ot-@r9bgmgqq('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    # own
    'users',
    'config',
    'menu',
    'content',
    'subscriptions',
    'donations',

    # 3rd party
    'solo',
    'modeltranslation',
    'nested_admin',
    'rosetta',
    'ckeditor',
    'django_otp',
    'django_otp.plugins.otp_static',
    'django_otp.plugins.otp_totp',
    'embed_video',
    'django_countries',
    'pinax.referrals',
    'corsheaders'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django_otp.middleware.OTPMiddleware',
    'pinax.referrals.middleware.SessionJumpingMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'indextrade.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # own
                'menu.context_processor.menu',
                'config.context_processor.footer_menu'
            ],
        },
    },
]

WSGI_APPLICATION = 'indextrade.wsgi.application'

SITE_ID = 1

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'indextrade',
        'USER': 'indextrade',
        'PASSWORD': 'indextrade',
        'HOST': '/run/mysqld/mysqld.sock',
        'ATOMIC_REQUESTS': True,
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_USER_MODEL = 'users.User'
#LOGIN_URL = 'two_factor:login'

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'ru'

LANGUAGES = (
    ('en', _(u'Английский')),
    ('ru', _(u'Русский'))
)

MODELTRANSLATION_DEFAULT_LANGUAGE = "ru"

ROSETTA_MESSAGES_PER_PAGE = 50

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

TIME_ZONE = 'Europe/Kiev'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Email settings
ADMIN_EMAIL = 'galaxynetwork@gmail.com'
EMAIL_HOST_USER = 'galaxynetwork@gmail.com'
EMAIL_HOST_PASSWORD = 'gnc123456!!!'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'static')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'media')


STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]


# mailchimp
MAILCHIMP_API_KEY = '36382dd6bdf29db5be72dd12d97f913c-us17'
MAILCHIMP_SUBSCRIBE_LIST_ID = 'c956ca7a84'
MAILCHIMP_WEBHOOK_KEY = ''

MAX_UPLOAD_SIZE = 429916160

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 
                [["Styles", "Format", "Bold", "Italic", "Underline", "Strike", "SpellChecker"],
                ['NumberedList', 'BulletedList', "Indent", "Outdent", 'JustifyLeft', 'JustifyCenter',
                 'JustifyRight', 'JustifyBlock', 'CreateDiv'],
                ["Image", "Table", "Link", "Unlink", "SectionLink", "Subscript",
                 "Superscript", "HorizontalRule", "SpecialChar"],
                ['TextColor','BGColor'],
                ['Undo', 'Redo'], ["Source"]]
        # [
        #     {'name': 'document', 'items': ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates']},
        #     {'name': 'clipboard', 'items': ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']},
        #     {'name': 'editing', 'items': ['Find', 'Replace', '-', 'SelectAll']},
        #     {'name': 'forms',
        #      'items': ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton',
        #                'HiddenField']},
        #     '/',
        #     {'name': 'basicstyles',
        #      'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat']},
        #     {'name': 'paragraph',
        #      'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-',
        #                'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl',
        #                'Language']},
        #     {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
        #     {'name': 'insert',
        #      'items': ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe']},
        #     '/',
        #     {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize']},
        #     {'name': 'colors', 'items': ['TextColor', 'BGColor']},
        #     {'name': 'tools', 'items': ['Maximize', 'ShowBlocks']},
        #     {'name': 'about', 'items': ['About']},
        #     '/',  # put this to force next toolbar on new line
        #     {'name': 'yourcustomtools', 'items': [
        #         # put the name of your editor.ui.addButton here
        #         'Preview',
        #         'Maximize',

        #     ]},
        # ],
    },
}

# tinypng API key
TINIFY_KEY = "5Wx3wtmQgSLuR1xIHjTIBa4OL2DsTl4C"


# Pinax referrals
PINAX_REFERRALS_ACTION_DISPLAY = {
    "RESPONDED": "Clicked on referral link",
    "USER_SIGNUP": "Registered with referral link",
    "PURCHASED": "Purchased with referral link",
}
PINAX_REFERRALS_CODE_GENERATOR_CALLBACK = "users.utils.generate_code"

CORS_ORIGIN_ALLOW_ALL = True

# local setting import
try:
    from local_settings import *
except ImportError:
    pass
